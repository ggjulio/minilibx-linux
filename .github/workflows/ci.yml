name: Minilibx CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    env:
      DISPLAY: ":99"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    - name: Install mlx dependencies
      run: |
        set -x
        if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install gcc make xorg libxext-dev libbsd-dev
        elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install xquartz
            echo "/usr/X11/bin" >> $GITHUB_PATH
        else
            echo "$RUNNER_OS not supported"
            exit 1
        fi
    - name: Setup x11 headless testing environment
      run: |
        set -x
        id
        whoami
        if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install xvfb xdotool
            Xvfb $DISPLAY -screen 0 1280x1024x24 &
        elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install xdotool
            which Xvfb
            sudo Xvfb $DISPLAY -screen 0 1280x1024x24 &
            sleep 5
            xeyes &
            ps -a || echo "error ps -a"
            
        else
              echo "$RUNNER_OS not supported"
              exit 1
        fi

    - name: Run ./configure
      run: ./configure
    - name: Run ./run_tests.sh
      run: |
        set -x  
        sudo ps -a || echo "error ps -a"
        cd test/
        ./run_tests.sh
    - name: Norminette, just for fun
      continue-on-error: true
      run: |
        pip3 install Norminette
        norminette *.c *.h

    # - name: Check leaks from binary "test/mlx-test"
    #   run: |
    #     echo "Info: Test will pass even if some still reachable are reported. It is not considered as a leak.\
    #     \n Valgrind will return 0 on thoses report (and is good since the mlx don't have a way to release his allocated memory)"
    #     cd test
    #     ls
    #     xvfb-run valgrind --leak-check=full --error-exitcode=1 ./run_tests.sh
  


  